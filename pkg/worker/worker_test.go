package worker

import (
	"encoding/hex"
	"testing"

	"github.com/thesubtlety/go-decrypt-jenkins/pkg/jenkinscrypto"
)

// ...if you test first rather than last you can prevent jankiness like this
// run all, if errors, run `go test` for output
/*
	if [[ $(go test | grep -i 'error' | wc -l) != "0" ]]; then echo "FAIL - error found"; else echo "SUCCESS"; fi
	if [[ $(go test | grep -i 'secretBytes: -----BEGIN RSA' | wc -l) != "1" ]]; then echo "FAIL - error secretBytes"; else echo "SUCCESS"; fi
	if [[ $(go test | grep -i 'description:' | wc -l) != "4" ]]; then echo "FAIL - incorrect description count"; else echo "SUCCESS"; fi
	if [[ $(go test | grep -i 'password: admin' | wc -l) != "2" ]]; then echo "FAIL - incorrect decrypted password count"; else echo "SUCCESS"; fi
*/

func TestParsefile(t *testing.T) {
	masterkey := "7a9b94a4b09c1de0509aeeac9fdb262a4b2cd1dae6a107191546d3ffe576785049e749567045cf63a775dfcc22e0abdd78485cf5b724952b160177820c4d378bab5a78be17ed3541c3dafbaf7da87686bb6ca1de3d2797b04b4bc92137889e8c127f6fc7d7dfad64f3e1e396b36d6133dfd6d273bfc4228d09a34ebd23856930"
	hudsonutilsecret := "BDF28150520CC80FB4175D0236B4D12815757F9AAB3D03E58CC2952369A3420955CEBDF2CE7AF39AF2E728AB7C5AFA58454CF8B4A65F289F95AEE00670BB11EC7CA5AAC13F8C56A8F19DFE0A7D2C0DCA4DFFD36B8BB4116C2A5B1FEE4478C3C026D164D7840D9EC9FC2787BC84AD9071798DBB0E6AC6B9316B6A88EADBDAB275AAFC98E381BD55AB6328A1999440E7B55DC64BFB8A74BD11DFFE0F48614D8E28EC1438F4643FD7B72F56352A70B883F9A3387C66947F351AE9BA87E99E6D3F594F33DC436D7A24C56E7E07715B4EBD10A620DB28D2B074806F0D8580D1406B5D42BC6DC3853ED46EB21B75C274B72356F83A9F10661D88D0B0689F5FD3B9F7D1DE71234D9DBE65BD6080D93BEF052974"
	secretbyteskey := "346AD90906D5B21276D790D0FF400341F22A555AC37E2E4838F8B4F801CAA7D278C0F01DC57EC66532EEF71359BA87F68832D02CB9DC3C37ED96A3E1005A760CAD6CDF368307D26E9BED44284D3C97F6F3940A855D99E13AAEAD3350BA478F6B32253F6C37AF9E395991CCCBF1E99AEB7C80357378544B5F530DE5CD626736DB4DC00242E72897FC7B16321D5F3CBC9A237CA3070704F2A0EF29D5FF267219FA042396B8E51496C769B76DD8078479FF75F357CE6C0475552215BE11087C66323D8E14347D12829F4145A85098CF4136FC6111BD37AEFA429417FA9F3925107C4F2503DC390AA8E3EF94DEB0120A59D2517CE738A8FAA6FB040A354624860D14DE71234D9DBE65BD6080D93BEF052974"

	secret, _ := hex.DecodeString(hudsonutilsecret)
	sbsecret, _ := hex.DecodeString(secretbyteskey)

	k, _ := jenkinscrypto.Decryptmasterkey(masterkey, secret)
	sbk, _ := jenkinscrypto.Decryptmasterkey(masterkey, sbsecret)

	credfile := `<?xml version='1.1' encoding='UTF-8'?><com.cloudbees.plugins.credentials.SystemCredentialsProvider plugin="credentials@2.1.16">  <domainCredentialsMap class="hudson.util.CopyOnWriteMap$Hash"><entry><com.cloudbees.plugins.credentials.domains.Domain><specifications/>      </com.cloudbees.plugins.credentials.domains.Domain>      <java.util.concurrent.CopyOnWriteArrayList><com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey plugin="ssh-credentials@1.13"><scope>GLOBAL</scope><id>Test ID 1</id><description>Test Description 1</description><username>jenkins</username><privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$UsersPrivateKeySource"/>        </com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey>        <org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl plugin="plain-credentials@1.4"><scope>GLOBAL</scope><id>Test ID 2</id><description>Test Description 2</description><fileName>id_rsa</fileName><secretBytes>{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}</secretBytes>        </org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl>        <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl><scope>GLOBAL</scope><id>Test ID 3</id><description>Test Description 3</description><username>cn=admin,dc=ldap,dc=example,dc=com</username><password>{AQAAABAAAAAQTLuWr9Hc+PO6JugpfBszCCCh7Orwzl/dLpyVP6cfcDg=}</password>        </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>        <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl><scope>GLOBAL</scope><id>Test ID 4</id><description>Test Description 4</description><username>admin</username><password>{AQAAABAAAAAQTLuWr9Hc+PO6JugpfBszCCCh7Orwzl/dLpyVP6cfcDg=}</password>        </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl></java.util.concurrent.CopyOnWriteArrayList>    </entry>  </domainCredentialsMap></com.cloudbees.plugins.credentials.SystemCredentialsProvider>`
	Parsefile(k, sbk, []byte(credfile))
}
